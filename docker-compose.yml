version: "3.9"
services:
  db2:
    container_name: db2
    build:  
      context: ./DB
    ports:
      - "5432:5432"
    volumes:
      - ./DB/db:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 15s

  front2:
    container_name: front2
    environment:
      - WATCHPACK_POLLING=true
    build:  
      context: ./front
    ports:
      - "3000:3000"
    volumes:
       - './front/:/code/front'
       - /code/front/app/node_modules
    command: npm start

  back2:
    container_name: back2
    build:
      context: ./back
    ports:
      - "8000:8000" 
    volumes:
      - ./back/:/code/back
    env_file:
      - .env
    command:  >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db2:
        condition: service_healthy

  